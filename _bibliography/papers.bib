@InProceedings{Bonfanti22,
  author      = {Bonfanti, Silvia and Gargantini, Angelo},
  booktitle   = {Biomedical Engineering Systems and Technologies: 14th International Joint Conference, BIOSTEC 2021, Virtual Event, February 11–13, 2021, Revised Selected Papers},
  title       = {Evaluation of Algorithms to Measure a Psychophysical Threshold Using Digital Applications},
  year        = {2022},
  address     = {Cham},
  pages       = {139--157},
  publisher   = {Springer},
  volume      = {1710},
  bibtex_show = {true},
  doi         = {10.1007/978-3-031-20664-1_8},
  isbn        = {978-3-031-20663-4},
}

@Article{Bonfanti2025,
  author    = {Bonfanti, Silvia and Gargantini, Angelo and Riccobene, Elvinia and Scandurra, Patrizia},
  journal   = {Formal Aspects of Computing},
  title     = {A Compositional Simulation Framework for Abstract State Machine Models of Discrete Event Systems},
    bibtex_show = {true}, year      = {2025},
  issn      = {1433-299X},
  month     = mar,
  number    = {2},
  pages     = {1--26},
  volume    = {37},
  doi       = {10.1145/3652862},
  pdf       = {FACCompositional25.pdf},
  publisher = {Association for Computing Machinery (ACM)},
}

@InProceedings{Bombarda2019,
  author    = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini},
  title     = {Developing Medical Devices from Abstract State Machines to Embedded Systems: A Smart Pill Box Case Study},
  booktitle = {Software Technology: Methods and Tools},
  publisher = {Springer International Publishing},
  year      = {2019},
  pages     = {89--103},
  abstract  = {The development of medical devices is a safety-critical process, because a failure or a malfunction of the device can cause serious injuries to the patients whom use it. The application of a rigorous process for their development reduces the risk of failures since validation and verification activities can be performed in a objective, reproducible, and documentable manner. In this paper we present an approach based on the Abstract State Machine (ASM) formal method. Starting from the model, validation and verification (V&V) techniques can be applied. Furthermore, by step-wise refinement, a final model can be obtained, which can be automatically translated to  code. The process is applied to the smart pill box case study. Starting from the ASM model, we generate  code for the Arduino platform after the application of V&V activities. Furthermore, we introduce regulation (IEC62304) and guidelines (FDA General Principles of Software Validation) that support the developer in medical software development. In particular, we explain how ASMs formal process can be compliant with them.},
  comment   = {Best student paper award},
  doi       = {10.1007/978-3-030-29852-4_7},
  url       = {https://doi.org/10.1007/978-3-030-29852-4_7},
  html      = {https://doi.org/10.1007/978-3-030-29852-4_7},
  bibtex_show = {true}
}

@InProceedings{Bombarda2019a,
  author    = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini and Marco Radavelli and Feng Duan and Yu Lei},
  title     = {Combining Model Refinement and Test Generation for Conformance Testing of the {IEEE} {PHD} Protocol Using Abstract State Machines},
  booktitle = {Testing Software and Systems},
  publisher = {Springer International Publishing},
  year      = {2019},
  pages     = {67--85},
  abstract  = {In this paper we propose a new approach to conformance testing based on Abstract State Machine (ASM) model refinement. It consists in generating test sequences from ASM models and checking the conformance between code and models in multiple iterations. This process is applied at different models, starting from the more abstract model to the one that is very close to the code. The process consists of the following steps: (1) model the system as an Abstract State Machine, (2) generate test sequences based on the ASM model, (3) compute the code coverage using generated tests, (4) if the coverage is low refine the Abstract State Machine and return to step 2. We have applied the proposed approach to Antidote, an open-source implementation of IEEE 11073-20601 Personal Health Device (PHD) protocol which allows personal healthcare devices to exchange data with other devices such as small computers and smartphones.},
  doi       = {10.1007/978-3-030-31280-0_5},
  url       = {https://doi.org/10.1007/978-3-030-31280-0_5},
  html      = {https://doi.org/10.1007/978-3-030-31280-0_5},
  bibtex_show = {true}
}

@InProceedings{Arcaini2020,
  author    = {Paolo Arcaini and Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini},
  title     = {Dealing with Robustness of Convolutional Neural Networks for Image Classification},
  booktitle = {2020 {IEEE} International Conference On Artificial Intelligence Testing ({AITest})},
  year      = {2020},
  month     = {aug},
  publisher = {{IEEE}},
  abstract  = {SW-based systems depend more and more on AI also for critical tasks. For instance, the use of machine learning, especially for image recognition, is increasing ever more. As state-of-the-art, Convolutional Neural Networks (CNNs) are the most adopted techniques for image classification. Although they are proved to have optimal results, it is not clear what happens when unforeseen modifications during the image acquisition and elaboration occur. Thus, it is very important to assess the robustness of a CNN, especially when it is used in a safety critical system, as, e.g., in the medical domain or in automated driving systems. Most of the analyses made about the robustness of CNNs are focused on adversarial examples which are created by exploiting the CNN internal structure; however, these are not the only problems we can encounter with CNNs and, moreover, they may be unlikely in some fields. This is why, in this paper, we focus on the robustness analysis when plausible alterations caused by an error during the acquisition of the input images occur. We give a novel definition of robustness w.r.t. possible input alterations for a CNN and we propose a framework to compute it. Moreover, we analyse four methods (data augmentation, limited data augmentation, network parallelization, and limited network parallelization) which can be used to improve the robustness of a CNN for image classification. Analyses are conducted over a dataset of histologic images.},
  comment   = {Best paper on AI-based testing},
  doi       = {10.1109/aitest49225.2020.00009},
  url       = {https://doi.org/10.1109/aitest49225.2020.00009},
  html      = {https://doi.org/10.1109/aitest49225.2020.00009},
  bibtex_show = {true}
}

@InProceedings{Bombarda2020,
  author    = {Andrea Bombarda and Angelo Gargantini},
  title     = {An Automata-Based Generation Method for Combinatorial Sequence Testing of Finite State Machines},
  booktitle = {2020 {IEEE} International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
  year      = {2020},
  month     = {oct},
  publisher = {{IEEE}},
  abstract  = {Combinatorial Interaction Testing has been applied to event-driven software systems by using as test suite a set of sequences of inputs in desired combinations. This is generally called combinatorial sequence testing (CST). CST requires possibly new system models from which tests are generated and new test generation methods (or an adaptation of the classical ones). Finite State Machines (FSMs) can easily represent event-based systems where certain inputs are valid only in some states and such constraints can be represented by the incompleteness of the FSM. In this paper, we propose an approach to CST where tests are generated from FSMs which are represented by automata together with test requirements. First, automata can be used to check if test sequences contain invalid inputs. We propose three methods to repair tests with invalid inputs. Moreover, we can directly embed into automata the system constraints over the inputs during generations, to generate only valid test sequences. We compare our automata-based method with the standard approach of Sequences Covering Arrays (SCAs) that produces a set of sequences, all with the same length, composed by the permutation of all the events supported by the system. We found that generating only valid tests from automata provides several advantages iv.r.t. repairing tests and SCAs.},
  doi       = {10.1109/icstw50294.2020.00036},
  url       = {https://doi.org/10.1109/icstw50294.2020.00036},
  html       = {https://doi.org/10.1109/icstw50294.2020.00036},
  bibtex_show = {true}
}

@InProceedings{Arcaini2021,
  author    = {Paolo Arcaini and Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini},
  title     = {{ROBY}: a Tool for Robustness Analysis of Neural Network Classifiers},
  booktitle = {2021 14th {IEEE} Conference on Software Testing, Verification and Validation ({ICST})},
  year      = {2021},
  month     = {apr},
  publisher = {{IEEE}},
  abstract  = {Classification using Artificial Neural Networks (ANNs) is widely applied in critical domains, such as autonomous driving and in the medical practice; therefore, their validation is extremely important. A common approach consists in assessing the network robustness, i.e., its ability to correctly classify input data that is particularly challenging for classification. We recently proposed a robustness definition that considers input data degraded by alterations that may occur in reality; the approach was originally devised for image classification in the medical domain. In this paper, we extend the definition of robustness to any type of input for which some alterations can be defined. Then, we present ROBY, a tool for ROBustness analYsis of ANNs. The tool accepts different types of data (images, sounds, text, etc.) stored either locally or on Google Drive. The user can use some alterations provided by the tool, or define their own. The robustness computation can be performed either locally or remotely on Google Colab. The tool has been experimented for robustness computation of image and sound classifiers, used in the medical and automotive domains.},
  doi       = {10.1109/icst49551.2021.00057},
  url       = {https://doi.org/10.1109/icst49551.2021.00057},
  html      = {https://doi.org/10.1109/icst49551.2021.00057},
  bibtex_show = {true}
}

@InProceedings{Bombarda2021,
  author    = {Andrea Bombarda and Edoardo Crippa and Angelo Gargantini},
  title     = {An environment for benchmarking combinatorial test suite generators},
  booktitle = {2021 {IEEE} International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
  year      = {2021},
  month     = {apr},
  publisher = {{IEEE}},
  abstract  = {New tools for combinatorial test generation are proposed every year. However, different generators may have different performances on different models, in terms of the number of tests produced and generation time, so the choice of which generator has to be used can be challenging. Classical comparison between CIT generators considers only the number of tests composing the test suite. Still, especially when the time dedicated to testing activity is limited, generation time can be determinant. Thus, we propose a benchmarking framework including 1) a set of generic benchmark models, 2) an interface to easily integrate new generators, 3) methods to benchmark each generator against the others and to check validity and completeness. We have tested the proposed environment using five different generators (ACTS, CAgen, CASA, Medici, and PICT), comparing the obtained results in terms of the number of test cases and generation times, errors, completeness, and validity. Finally, we propose a CIT competition, between combinatorial generators, based on our framework.},
  doi       = {10.1109/icstw52544.2021.00021},
  url       = {https://doi.org/10.1109/icstw52544.2021.00021},
  html      = {https://doi.org/10.1109/icstw52544.2021.00021},
  bibtex_show = {true}
}

@InCollection{Arcaini2021a,
  author    = {Paolo Arcaini and Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini and Elvinia Riccobene and Patrizia Scandurra},
  title     = {The {ASMETA} Approach to Safety Assurance of Software Systems},
  booktitle = {Logic, Computation and Rigorous Methods},
  publisher = {Springer International Publishing},
  year      = {2021},
  pages     = {215--238},
  abstract  = {Safety-critical systems require development methods and processes that lead to provably correct systems in order to prevent catastrophic consequences due to system failure or unsafe operation. The use of models and formal analysis techniques is highly demanded both at design-time, to guarantee safety and other desired qualities already at the early stages of the system development, and at runtime, to address requirements assurance during the system operational stage. In this paper, we present the modeling features and analysis techniques supported by ASMETA (ASM mETAmodeling), a set of tools for the Abstract State Machines formal method. We show how the modeling and analysis approaches in ASMETA can be used during the design, development, and operation phases of the assurance process for safety-critical systems, and we illustrate the advantages of integrated use of tools as that provided by ASMETA.},
  doi       = {10.1007/978-3-030-76020-5_13},
  url       = {https://doi.org/10.1007/978-3-030-76020-5_13},
  html      = {https://doi.org/10.1007/978-3-030-76020-5_13},
  bibtex_show = {true}
}

@InProceedings{Bombarda2021a,
  author    = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini and Elvinia Riccobene},
  title     = {Extending {ASMETA} with Time Features},
  booktitle = {Rigorous State-Based Methods},
  publisher = {Springer International Publishing},
  year      = {2021},
  pages     = {105--111},
  abstract  = {ASMs and the ASMETA framework can be used to model and analyze a variety of systems, and many of them rely on time constraints. In this paper, we present the ASMETA extension to deal with model time features.},
  doi       = {10.1007/978-3-030-77543-8_8},
  url       = {https://doi.org/10.1007/978-3-030-77543-8_8},
  html      = {https://doi.org/10.1007/978-3-030-77543-8_8},
  bibtex_show = {true}
}

@InProceedings{Arcaini2021b,
  author    = {Paolo Arcaini and Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini},
  title     = {Efficient Computation of Robustness of Convolutional Neural Networks},
  booktitle = {2021 {IEEE} International Conference on Artificial Intelligence Testing ({AITest})},
  year      = {2021},
  month     = {aug},
  publisher = {{IEEE}},
  abstract  = {Validation of CNNs is extremely important, especially when they are used in safety-critical domains. In particular, in the latest years, the focus of validation has been put on assessing the robustness of CNNs, i.e., their ability to correctly classify perturbed input data. A way to measure robustness is to check the network accuracy over many datasets obtained by altering the input data in different ways, but this is time and resource-consuming. In this paper, we present ASAP, a method to efficiently compute the robustness of a CNN, exploiting a parabola-based approximation which allows to adaptively select only relevant alteration levels. The method is tested on two different benchmarks (MNIST and breast cancer classification). Moreover, we compare ASAP with other techniques based on uniform sampling, numerical integration, and random sampling.},
  doi       = {10.1109/aitest52744.2021.00015},
  url       = {https://doi.org/10.1109/aitest52744.2021.00015},
  html      = {https://doi.org/10.1109/aitest52744.2021.00015},
  bibtex_show = {true}
}

@InProceedings{Bombarda2021b,
  author    = {Andrea Bombarda and Silvia Bonfanti and Cristiano Galbiati and Angelo Gargantini and Patrizio Pelliccione and Elvinia Riccobene and Masayuki Wada},
  title     = {Lessons Learned from the Development of a Mechanical Ventilator for {COVID}-19},
  booktitle = {2021 {IEEE} 32nd International Symposium on Software Reliability Engineering ({ISSRE})},
  year      = {2021},
  month     = {oct},
  publisher = {{IEEE}},
  abstract  = {During the COVID-19 pandemic, many researchers all over the world have offered their time and competencies to face the heavy consequences of the disease. This is the case of a group of physicists, engineers, and physicians that around the middle of March 2020 started to develop a simplified mechanical lung ventilator, called MVM (Mechanical Ventilator Milano), to answer the high request of ventilators for Acute Respiratory Distress Syndrome (ARDS) in intensive care units. A prototype was ready in around one month. Since medical software malfunctions can lead to injuries or death of patients, before marketing MVM ventilators and distributing them in hospitals, software certification in accordance with the IEC 62304 standard was mandatory to guarantee system reliability. The team was then complemented by computer scientists specifically devoted to this task. The software re-engineering process, which lasted around two months from the end of the prototype, brought to a strong re-implementation of the device software components, which involved all the stakeholders in a continuous integration setting. In this paper, we report the experience of the MVM control SW re-engineering necessary to show evidence that the SW adheres to the standards and to consequently obtain the certification. We share results and lessons learned from this social project, where more than 100 volunteer researchers worked towards software certification at the extreme of their strength to get a real device finished in a rush since strongly required to support physicians in treating COVID-19 patients.},
  doi       = {10.1109/issre52982.2021.00016},
  url       = {https://doi.org/10.1109/issre52982.2021.00016},
  html      = {https://doi.org/10.1109/issre52982.2021.00016},
  bibtex_show = {true}
}

@InProceedings{Bombarda2021c,
  author       = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini and Elvinia Riccobene},
  title        = {Developing a Prototype of a Mechanical Ventilator Controller from Requirements to Code with ASMETA},
  abstract     = {Rigorous development processes aim to be effective in developing critical systems, especially if failures can have catastrophic consequences for humans and the environment. Such processes generally rely on formal methods, which can guarantee, thanks to their mathematical foundation, model preciseness, and properties assurance. However, they are rarely adopted in practice. In this paper, we report our experience in using the Abstract State Machine formal method and the ASMETA framework in developing a prototype of the control software of the MVM (Mechanical Ventilator Milano), a mechanical lung ventilator that has been designed, successfully certified, and deployed during the COVID-19 pandemic. Due to time constraints and lack of skills, no formal method was applied for the MVM project. However, we here want to assess the feasibility of developing (part of) the ventilator by using a formal method-based approach. Our development process starts from a high-level formal specification of the system to describe the MVM main operation modes. Then, through a sequence of refined models, all the other requirements are captured, up to a level in which a C++ implementation of a prototype of the MVM controller is automatically generated from the model, and tested. Along the process, at each refinement level, different model validation and verification activities are performed, and each refined model is proved to be a correct refinement of the previous level. By means of the MVM case study, we evaluate the effectiveness and usability of our formal approach.},
  date         = {2021-11-16},
  doi          = {10.4204/EPTCS.349.2},
  eprint       = {http://arxiv.org/abs/2111.08204v1},
  eprintclass  = {cs.FL},
  eprinttype   = {arXiv},
  file         = {:http\://arxiv.org/pdf/2111.08204v1:PDF},
  journaltitle = {EPTCS 349, 2021, pp. 13-29},
  keywords     = {cs.FL, cs.SE},
  url       = {https://doi.org/10.4204/EPTCS.349.2},
  html      = {https://doi.org/10.4204/EPTCS.349.2},
  bibtex_show = {true},
  year = {2021}
}

@Article{Abba2021,
  author    = {A. Abba and C. Accorsi and P. Agnes and E. Alessi and P. Amaudruz and A. Annovi and F. Ardellier Desages and S. Back and C. Badia and J. Bagger and V. Basile and G. Batignani and A. Bayo and B. Bell and M. Beschi and D. Biagini and G. Bianchi and S. Bicelli and D. Bishop and T. Boccali and A. Bombarda and S. Bonfanti and W. M. Bonivento and M. Bouchard and M. Breviario and S. Brice and R. Brown and J. M. Calvo-Mozota and L. Camozzi and M. Camozzi and A. Capra and M. Caravati and M. Carlini and A. Ceccanti and B. Celano and J. M. Cela Ruiz and C. Charette and G. Cogliati and M. Constable and C. Crippa and G. Croci and S. Cudmore and C. E. Dahl and A. Dal Molin and M. Daley and C. Di Guardo and G. D{\textquotesingle}Avenio and O. Davignon and M. Del Tutto and J. De Ruiter and A. Devoto and P. Diaz Gomez Maqueo and F. Di Francesco and M. Dossi and E. Druszkiewicz and C. Duma and E. Elliott and D. Farina and C. Fernandes and F. Ferroni and G. Finocchiaro and G. Fiorillo and R. Ford and G. Foti and R. D. Fournier and D. Franco and C. Fricbergs and F. Gabriele and C. Galbiati and P. Garcia Abia and A. Gargantini and L. Giacomelli and F. Giacomini and F. Giacomini and L. S. Giarratana and S. Gillespie and D. Giorgi and T. Girma and R. Gobui and D. Goeldi and F. Golf and P. Gorel and G. Gorini and E. Gramellini and G. Grosso and F. Guescini and E. Guetre and G. Hackman and T. Hadden and W. Hawkins and K. Hayashi and A. Heavey and G. Hersak and N. Hessey and G. Hockin and K. Hudson and A. Ianni and C. Ienzi and V. Ippolito and C. C. James and C. Jillings and C. Kendziora and S. Khan and E. Kim and M. King and S. King and A. Kittmer and I. Kochanek and J. Kowalkowski and R. Krücken and M. Kushoro and S. Kuula and M. Laclaustra and G. Leblond and L. Lee and A. Lennarz and M. Leyton and X. Li and P. Liimatainen and C. Lim and T. Lindner and T. Lomonaco and P. Lu and R. Lubna and G. A. Lukhanin and G. Luz{\'{o}}n and M. MacDonald and G. Magni and R. Maharaj and S. Manni and C. Mapelli and P. Margetak and L. Martin and S. Martin and M. Mart{\'{\i}}nez and N. Massacret and P. McClurg and A. B. McDonald and E. Meazzi and R. Migalla and T. Mohayai and L. M. Tosatti and G. Monzani and C. Moretti and B. Morrison and M. Mountaniol and A. Muraro and P. Napoli and F. Nati and C. R. Natzke and A. J. Noble and A. Norrick and K. Olchanski and A. Ortiz de Solorzano and F. Padula and M. Pallavicini and I. Palumbo and E. Panontin and N. Papini and L. Parmeggiano and S. Parmeggiano and K. Patel and A. Patel and M. Paterno and C. Pellegrino and P. Pelliccione and V. Pesudo and A. Pocar and A. Pope and S. Pordes and F. Prelz and O. Putignano and J. L. Raaf and C. Ratti and M. Razeti and A. Razeto and D. Reed and J. Refsgaard and T. Reilly and A. Renshaw and F. Retriere and E. Riccobene and D. Rigamonti and A. Rizzi and J. Rode and J. Romualdez and L. Russel and D. Sablone and S. Sala and D. Salomoni and P. Salvo and A. Sandoval and E. Sansoucy and R. Santorelli and C. Savarese and E. Scapparone and T. Schaubel and S. Scorza and M. Settimo and B. Shaw and S. Shawyer and A. Sher and A. Shi and P. Skensved and A. Slutsky and B. Smith and N. J. T. Smith and A. Stenzler and C. Straubel and P. Stringari and M. Suchenek and B. Sur and S. Tacchino and L. Takeuchi and M. Tardocchi and R. Tartaglia and E. Thomas and D. Trask and J. Tseng and L. Tseng and L. VanPagee and V. Vedia and B. Velghe and S. Viel and A. Visioli and L. Viviani and D. Vonica and M. Wada and D. Walter and H. Wang and M. H. L. S. Wang and S. Westerdale and D. Wood and D. Yates and S. Yue and V. Zambrano},
  title     = {The novel Mechanical Ventilator Milano for the {COVID}-19 pandemic},
  journal   = {Physics of Fluids},
  year      = {2021},
  volume    = {33},
  number    = {3},
  pages     = {037122},
  month     = {mar},
  abstract  = {This paper presents the Mechanical Ventilator Milano (MVM), a novel intensive therapy mechanical ventilator designed for rapid, large-scale, low-cost production for the COVID-19 pandemic. Free of moving mechanical parts and requiring only a source of compressed oxygen and medical air to operate, the MVM is designed to support the long-term invasive ventilation often required for COVID-19 patients and operates in pressure-regulated ventilation modes, which minimize the risk of furthering lung trauma. The MVM was extensively tested against ISO standards in the laboratory using a breathing simulator, with good agreement between input and measured breathing parameters and performing correctly in response to fault conditions and stability tests. The MVM has obtained Emergency Use Authorization by U.S. Food and Drug Administration (FDA) for use in healthcare settings during the COVID-19 pandemic and Health Canada Medical Device Authorization for Importation or Sale, under Interim Order for Use in Relation to COVID-19. Following these certifications, mass production is ongoing and distribution is under way in several countries. The MVM was designed, tested, prepared for certification, and mass produced in the space of a few months by a unique collaboration of respiratory healthcare professionals and experimental physicists, working with industrial partners, and is an excellent ventilator candidate for this pandemic anywhere in the world.},
  doi       = {10.1063/5.0044445},
  publisher = {{AIP} Publishing},
  url       = {https://doi.org/10.1063/5.0044445},
  html      = {https://doi.org/10.1063/5.0044445},
  bibtex_show = {true}
}

@Article{Bombarda2021d,
  author   = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini and Patrizio Pelliccione and Elvinia Riccobene},
  title    = {Il successo di MVM, un progetto social e internazionale per realizzare un ventilatore polmonare},
  journal  = {Il giornale dell'ingegnere},
  year     = {2021},
  volume   = {5},
  pages    = {13},
  month    = jun,
  issn     = {1974-7144},
  abstract = {La sua creazione ha visto la partecipazione di oltre 250 persone tra operatori sanitari, sviluppatori di software e ricercatori di Astrofisica delle particelle al Gran Sasso Science Institute dell’Aquila},
  doi      = {http://hdl.handle.net/10446/202112},
  url      = {http://hdl.handle.net/10446/202112},
  html      = {http://hdl.handle.net/10446/202112},
  bibtex_show = {true}
}

@InProceedings{Bombarda2022,
  author    = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini},
  title     = {Automatic Test Generation with~{ASMETA} for~the~Mechanical Ventilator Milano Controller},
  booktitle = {Testing Software and Systems},
  publisher = {Springer International Publishing},
  year      = {2022},
  pages     = {65--72},
  abstract  = {This paper presents an automatic test cases generation method from Abstract State Machine specifications. Starting from the ASMETA specification, the proposed approach applies the following steps: 1. Generation of abstract tests from a ASMETA model; 2. Optimization of the abstract tests; 3. Concretization of the abstract tests in GoogleTest; 4. Execution of the concrete tests on  code. We have applied this approach to the Mechanical Ventilator Milano (MVM) project, which our research group has contributed to develop, test, and certify during the Covid-19 pandemic.},
  doi       = {10.1007/978-3-031-04673-5_5},
  url      = {https://doi.org/10.1007/978-3-031-04673-5_5},
  html      = {https://doi.org/10.1007/978-3-031-04673-5_5},
  bibtex_show = {true}
}

@InProceedings{Arcaini2022,
  author    = {Paolo Arcaini and Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini and Daniele Gamba and Rita Pedercini},
  title     = {Robustness assessment and improvement of a neural network for blood oxygen pressure estimation},
  booktitle = {2022 {IEEE} Conference on Software Testing, Verification and Validation ({ICST})},
  year      = {2022},
  month     = {apr},
  publisher = {{IEEE}},
  abstract  = {Neural networks have been widely applied for performing tasks in critical domains, such as, for example, the medical domain; their robustness is, therefore, important to be guaranteed. In this paper, we propose a robustness definition for neural networks used for regression, by tackling some of the problems of existing robustness definitions. First of all, by following recent works done for classification problems, we propose to define the robustness of networks used for regression w.r.t. alterations of their input data that can happen in reality. Since different alteration levels are not always equally probable, the robustness definition is parameterized with the probability distribution of the alterations. The error done by this type of networks is quantifiable as the difference between the estimated value and the expected value; since not all the errors are equally critical, the robustness definition is also parameterized with a “tolerance” function that specifies how the error is tolerated. The current work has been motivated by the collaboration with the industrial partner that has implemented a medical sensor employing a Multilayer Perceptron for the estimation of the blood oxygen pressure. After having computed the robustness for the case study, we have successfully applied three techniques to improve the network robustness: data augmentation with recombined data, data augmentation with altered data, and incremental learning. All the techniques have proved to contribute to increasing the robustness, though in different ways.},
  doi       = {10.1109/icst53961.2022.00040},
  url      = {https://doi.org/10.1109/icst53961.2022.00040},
  html      = {https://doi.org/10.1109/icst53961.2022.00040},
  bibtex_show = {true}
}

@InProceedings{Bombarda2022a,
  author    = {Andrea Bombarda and Angelo Gargantini},
  title     = {Parallel Test Generation for Combinatorial Models Based on Multivalued Decision Diagrams},
  booktitle = {2022 {IEEE} International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
  year      = {2022},
  month     = {apr},
  publisher = {{IEEE}},
  abstract  = {Combinatorial interaction testing (CIT) is a testing technique that has proved to be effective in finding faults due to the interaction among inputs, and in reducing the number of test cases. One of the most crucial parts of combinatorial testing is the test generation for which many tools and algorithms have been proposed in recent years, with different methodologies and performances. However, generating tests remains a complex procedure that can require a lot of effort (mainly time). Thus, in this paper, we present the tool pMEDICI which aims to reduce the test generation time by parallelizing the generation process and exploiting the recent multithread hardware architectures. It uses Multivalued Decision Diagrams (MDDs) for representing the constraints and the tuples to be tested and extracts from them the t-wise test cases. Our experiments confirm that our tool requires a shorter amount of time for generating combinatorial test suites, especially for complex models, with a lot of parameters and constraints.},
  doi       = {10.1109/icstw55395.2022.00027},
  url      = {https://doi.org/10.1109/icstw55395.2022.00027},
  html      = {https://doi.org/10.1109/icstw55395.2022.00027},
  bibtex_show = {true}
}

@Article{Bombarda2022b,
  author    = {Andrea Bombarda and Silvia Bonfanti and Cristiano Galbiati and Angelo Gargantini and Patrizio Pelliccione and Elvinia Riccobene and Masayuki Wada},
  title     = {Guidelines for the development of a critical software under emergency},
  journal   = {Information and Software Technology},
  year      = {2022},
  pages     = {107061},
  month     = {sep},
  abstract  = {Context:
During the first wave of the COVID-19 pandemic, an international and heterogeneous team of scientists collaborated on a social project to produce a mechanical ventilator for intensive care units (MVM). MVM has been conceived to be produced and used also in poor countries: it is open-source, no patents, cheap, and can be produced with materials that are easy to retrieve.

Objective:
The objective of this work is to extract from the experience of the MVM development and software certification a set of lessons learned and then guidelines that can help developers to produce safety-critical devices in similar emergency situations.

Method:
We conducted a case study. We had full access to source code, comments on code, change requests, test reports, every deliverable (60 in total) produced for the software certification (safety concepts, requirements specifications, architecture and design, testing activities, etc.), notes, whiteboard sketches, emails, etc. We validated both lessons learned and guidelines with experts.

Findings:
We contribute a set of validated lessons learned and a set of validated guidelines, together with a discussion of benefits and risks of each guideline.

Conclusion:
In this work we share our experience in certifying software for healthcare devices produced under emergency, i.e. with strict and pressing time constraints and with the difficulty of establishing a heterogeneous development team made of volunteers. We believe that the guidelines will help engineers during the development of critical software under emergency.},
  doi       = {10.1016/j.infsof.2022.107061},
  publisher = {Elsevier {BV}},
  url      = {https://doi.org/10.1016/j.infsof.2022.107061},
  html      = {https://doi.org/10.1016/j.infsof.2022.107061},
  bibtex_show = {true}
}

@InProceedings{Bombarda2022c,
  author    = {Andrea Bombarda and Silvia Bonfanti and Martina De Sanctis and Angelo Gargantini and Patrizio PelliccioneT and Elvinia Riccobene and Patrizia Scandurra},
  title     = {Towards an Evaluation Framework for Autonomous Systems},
  booktitle = {2022 {IEEE} International Conference on Autonomic Computing and Self-Organizing Systems Companion ({ACSOS}-C)},
  year      = {2022},
  month     = {sep},
  publisher = {{IEEE}},
  abstract  = {Despite the active and proficuous research in autonomous and self-adaptive systems of the last years, an evaluation framework to assess abilities related to adaption and to provide guidance to make a system smarter is still missing. In this paper, we perform the first steps towards an evaluation framework for autonomous systems to (i) make an assessment of a system from the perspective of its capacity to adapt and learn over time to handle new and unexpected conditions, (ii) explore and identify the possible pathways of improvement of the smart abilities (e.g., decisional autonomy, adaptability, perception, interaction, etc.) of a system, (iii) make a re-assessment when the improvement has been performed.},
  doi       = {10.1109/acsosc56246.2022.00025},
  url      = {https://doi.org/10.1109/acsosc56246.2022.00025},
  html      = {https://doi.org/10.1109/acsosc56246.2022.00025},
  bibtex_show = {true}
}

@Article{Bombarda2022d,
  author    = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini and Yu Lei and Feng Duan},
  title     = {{RATE}: A model-based testing approach that combines model refinement and test execution},
  journal   = {Software Testing, Verification and Reliability},
  year      = {2022},
  month     = {dec},
  abstract  = {In this paper, we present an approach to conformance testing based on abstract state machines (ASMs) that combines model refinement and test execution (RATE) and its application to three case studies. The RATE approach consists in generating test sequences from ASMs and checking the conformance between code and models in multiple iterations. The process follows these steps: (1) model the system as an abstract state machine; (2) validate and verify the model; (3) generate test sequences automatically from the ASM model; (4) execute the tests over the implementation and compute the code coverage; (5) if the coverage is below the desired threshold, then refine the abstract state machine model to add the uncovered functionalities and return to step 2. We have applied the proposed approach in three case studies: a traffic light control system (TLCS), the IEEE 11073-20601 personal health device (PHD) protocol, and the mechanical ventilator Milano (MVM). By applying RATE, at each refinement level, we have increased code coverage and identified some faults or conformance errors for all the case studies. The fault detection capability of RATE has also been confirmed by mutation analysis, in which we have highlighted that, many mutants can be killed even by the most abstract models.},
  doi       = {10.1002/stvr.1835},
  publisher = {Wiley},
  url      = {https://doi.org/10.1002/stvr.1835},
  html      = {https://doi.org/10.1002/stvr.1835},
  bibtex_show = {true}
}

@inproceedings{Bombarda2023,
  author = {Andrea Bombarda and Angelo Gargantini and Andrea Calvagna},
  title = {Multi-thread Combinatorial Test Generation with SMT solvers},
  year = {2023},
  isbn = {9781450395175},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/3555776.3577703},
  abstract = {Combinatorial interaction testing (CIT) is a testing technique that has proven to be effective in finding faults due to the interaction among inputs and in reducing the number of test cases, without losing effectiveness. Several tools have been proposed in the literature; however, generating tests remains a challenging task. In this paper, we present a technique for generating combinatorial test suites that uses a multi-thread architecture and exploits Satisfiability Modulo Theory (SMT) solvers to represent model parameters, constraints, and tuples, and it builds from SMT solver contexts the desired test suite. This technique is implemented by the tool KALI. The main advantage of using SMT solvers is that combinatorial models can contain all kinds of parameters and constraints. To evaluate our approach, we tested the impact of several optimizations and compared the performance of KALI with those of some existing tools for test generation. Our experiments confirm that the use of multi-threading is a promising technique but still requires some optimization for being more effective than the already available ones.},
  booktitle = {Proceedings of the 38th ACM/SIGAPP Symposium on Applied Computing},
  numpages = {8},
  location = {Tallin, Estonia},
  series = {SAC '23},
  url      = {https://doi.org/10.1145/3555776.35777035},
  html      = {https://doi.org/10.1145/3555776.3577703},
  bibtex_show = {true}
}

@inproceedings{Bombarda2023d,
  doi = {10.1145/3579028.3609017},
  year = {2023},
  month = aug,
  publisher = {{ACM}},
  author = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini},
  title = {On the Reuse of Existing Configurations for Testing Evolving Feature Models},
  booktitle = {Proceedings of the 27th {ACM} International Systems and Software Product Line Conference - Volume B},
  url      = {https://doi.org/10.1145/3579028.3609017},
  html      = {https://doi.org/10.1145/3579028.3609017},
  bibtex_show = {true}
}

@InProceedings{Bombarda2023a,
  author    = {Andrea Bombarda and Angelo Gargantini},
  title     = {Incremental generation of combinatorial test suites starting from existing seed tests},
  booktitle = {2023 {IEEE} International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
  year      = {2023},
  month     = {apr},
  publisher = {{IEEE}},
  doi = {10.1109/ICSTW58534.2023.00044},
  abstract  = {Many researchers have been focusing on building combinatorial test generators having the best possible performances, in terms of smaller test suites and shorter generation times. The majority of tools generates test suites from scratch. This means that when the test suite must be regenerated, the old tests are discarded and a new test suite is built. However, there are many cases in which old test cases, possibly written by hand, need to be (or could be) included in the final test suite, and the test suite completed with new tests in order to reach the desired level of combinatorial coverage. These existing tests that are reused are generally called \emph{seed tests}. Seed tests could be important for testing domain-specific critical parts of the system, or they could represent old test suites that must be enriched to reach the desired (possibly higher) strength of coverage. In this paper, we propose a new architecture for incremental test generation that starts from existing test seeds. This new architecture is supported by the pMEDICI+ tool which extends our previous effort done for pMEDICI. We evaluate the proposed approach on the benchmarks given in the context of the second edition of the CT-Competition and w.r.t. two application scenarios. For each scenario, we automatically generate seed tests and then we apply pMEDICI+ to obtain the desired test suite. The experiments highlight that using incremental test generation can contribute significantly in the reduction of test generation time and, in many cases, in the reduction of the test suite size.},
  url      = {https://doi.org/10.1109/ICSTW58534.2023.00044},
  html      = {https://doi.org/10.1109/ICSTW58534.2023.00044},
  bibtex_show = {true}
}

@InProceedings{Bombarda2023b,
  author="Bombarda, Andrea
    	and Bonfanti, Silvia
	and Gargantini, Angelo",
  editor="Gl{\"a}sser, Uwe
	and Creissac Campos, Jose
	and M{\'e}ry, Dominique
	and Palanque, Philippe",
  title="Formal {MVC}: A Pattern for the Integration of ASM Specifications in UI Development",
  booktitle="Rigorous State-Based Methods",
  year="2023",
  publisher="Springer Nature Switzerland",
  address="Cham",
  pages="340--357",
  abstract="Using architectural patterns is of paramount importance for guaranteeing the correct functionality, maintainability and modularity, especially for complex software systems. The model-view-controller (MVC) pattern is typically used in user interfaces (UIs), since it allows the separation between the internal representation of the information and the way it is shown to users. The main problem of using this approach in a formal setting, where formal models are used to specify the requirements and prove safety properties, is that those models are not directly used within the MVC pattern and, thus, all the activities performed at model-level are somehow lost when implementing the UI. For this reason, in this paper, we present the formal MVC pattern (fMVC), an extension of the classical MVC where the model is a formal specification, written using Abstract State Machines. This pattern is supported by the AsmetaFMVCLib, which allows the user to link the formal model with the view and the controller by using simple Java annotations. We present the application of fMVC on a simple example of a calculator for explanatory purposes, then we apply it to the AMAN case study, which has inspired the definition of fMVC. We discuss the advantages of fMVC and its shortcomings, trying to identify the scenarios where it should be applied and possible alternatives.",
  isbn="978-3-031-33163-3",
  doi="10.1007/978-3-031-33163-3_25",
  url      = {https://doi.org/10.1007/978-3-031-33163-3_25},
  html      = {https://doi.org/10.1007/978-3-031-33163-3_25},
  bibtex_show = {true}
}

@inproceedings{Bombarda2024e, 
  author = {Essbai, Wasim and Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo}, 
  title = {A Framework for Including Uncertainty in Robustness Evaluation of Bayesian Neural Network Classifiers}, 
  year = {2024}, 
  isbn = {9798400705748}, 
  publisher = {Association for Computing Machinery}, 
  address = {New York, NY, USA}, 
  url = {https://doi.org/10.1145/3643786.3648026}, 
  html = {https://doi.org/10.1145/3643786.3648026}, 
  doi = {10.1145/3643786.3648026}, 
  abstract = {Neural networks (NNs) play a crucial role in safety-critical fields, requiring robustness assurance. Bayesian Neural Networks (BNNs) address data uncertainty, providing probabilistic outputs. However, the literature on BNN robustness assessment is still limited, mainly focusing on adversarial examples, which are often impractical in real-world applications. This paper introduces a fresh perspective on BNN classifier robustness, considering natural input variations while accounting for prediction uncertainties. Our approach excludes predictions labeled as "unknown", enabling practitioners to define alteration probabilities, penalize errors beyond a specified threshold, and tolerate varying error levels below it. We present a systematic approach for evaluating the robustness of BNNs, introducing new evaluation metrics that account for prediction uncertainty. We conduct a comparative study using two NNs - standard MLP and Bayesian MLP - on the MNIST dataset. Our results show that by leveraging estimated uncertainty, it is possible to enhance the system's robustness.}, 
  booktitle = {Proceedings of the 5th IEEE/ACM International Workshop on Deep Learning for Testing and Testing for Deep Learning}, 
  pages = {25–32}, 
  numpages = {8}, 
  keywords = {robustness, bayesian neural networks, alterations, uncertainty}, 
  location = {Lisbon, Portugal}, 
  series = {DeepTest '24},
  funding={ANTHEM},
  bibtex_show = {true}
}

@ARTICLE{Bombarda2024c,
  author={Bombarda, Andrea and Bonfanti, Silvia and De Sanctis, Martina and Gargantini, Angelo and Pelliccione, Patrizio and Riccobene, Elvinia and Scandurra, Patrizia},
  journal={IEEE Transactions on Software Engineering}, 
  title={Evaluation Framework for Autonomous Systems: The Case of Programmable Electronic Medical Systems}, 
  year={2024},
  volume={50},
  number={4},
  pages={995-1014},
  keywords={Lenses;Robots;Autonomous systems;Instruments;Robot sensing systems;Ventilators;Adaptive systems;Autonomous systems;evaluation framework;programmable electronic medical systems (PEMS)},
  doi={10.1109/TSE.2024.3374382},
  funding={ANTHEM,CHANGES,MVM-Adapt},
  url      = {https://doi.org/10.1109/TSE.2024.3374382},
  html      = {https://doi.org/10.1109/TSE.2024.3374382},
  bibtex_show = {true}
}

@article{Bombarda2024d,
  title = {State of the CArt: evaluating covering array generators at scale},
  ISSN = {1433-2787},
  url = {http://dx.doi.org/10.1007/s10009-024-00745-2},
  html = {http://dx.doi.org/10.1007/s10009-024-00745-2},
  DOI = {10.1007/s10009-024-00745-2},
  journal = {International Journal on Software Tools for Technology Transfer},
  publisher = {Springer Science and Business Media LLC},
  author = {Leithner,  Manuel and Bombarda,  Andrea and Wagner,  Michael and Gargantini,  Angelo and Simos,  Dimitris E.},
  year = {2024},
  month = may,
  funding={ANTHEM},
  bibtex_show = {true}
}

@inproceedings{Bombarda2024b,
  title = {An Android App for Training New Doctors in Mechanical Ventilation},
  html = {http://dx.doi.org/10.5220/0012323900003657},
  url = {http://dx.doi.org/10.5220/0012323900003657},
  DOI = {10.5220/0012323900003657},
  booktitle = {Proceedings of the 17th International Joint Conference on Biomedical Engineering Systems and Technologies},
  publisher = {SCITEPRESS - Science and Technology Publications},
  author = {Bombarda,  Andrea and Millefiori,  Sara and Penzo,  Michela and Novelli,  Luca and Gargantini,  Angelo},
  year = {2024},
  funding={ANTHEM},
  bibtex_show = {true}
}

@article{Bombarda2024,
  title = {Design,  implementation,  and validation of a benchmark generator for combinatorial interaction testing tools},
  volume = {209},
  ISSN = {0164-1212},
  html = {http://dx.doi.org/10.1016/j.jss.2023.111920},
  url = {http://dx.doi.org/10.1016/j.jss.2023.111920},
  DOI = {10.1016/j.jss.2023.111920},
  journal = {Journal of Systems and Software},
  publisher = {Elsevier BV},
  author = {Bombarda,  Andrea and Gargantini,  Angelo},
  year = {2024},
  month = mar,
  pages = {111920},
  funding={ANTHEM},
  bibtex_show = {true}
}

@inproceedings{Bombarda2024f,
  title = {ASMETA Tool Set for Rigorous System Design},
  ISBN = {9783031711770},
  ISSN = {1611-3349},
  html = {http://dx.doi.org/10.1007/978-3-031-71177-0_28},
  url = {http://dx.doi.org/10.1007/978-3-031-71177-0_28},
  DOI = {10.1007/978-3-031-71177-0_28},
  booktitle = {Formal Methods},
  publisher = {Springer Nature Switzerland},
  author = {Bombarda,  Andrea and Bonfanti,  Silvia and Gargantini,  Angelo and Riccobene,  Elvinia and Scandurra,  Patrizia},
  year = {2024},
  month = sep,
  pages = {492–517},
  funding={ANTHEM,SMIMI},
  bibtex_show = {true},
  pdf         = {TutorialAsmetaFM2024.pdf}
}

@inproceedings{Bombarda2024j,
  series = {SPLC ’24},
  title = {On the Use of Multi-valued Decision Diagrams to Count Valid Configurations of Feature Models},
  html = {http://dx.doi.org/10.1145/3646548.3672594},
  url = {http://dx.doi.org/10.1145/3646548.3672594},
  DOI = {10.1145/3646548.3672594},
  booktitle = {28th ACM International Systems and Software Product Line Conference},
  publisher = {ACM},
  author = {Bombarda,  Andrea and Gargantini,  Angelo},
  year = {2024},
  month = sep,
  pages = {96–106},
  collection = {SPLC ’24},
  funding={ANTHEM,SMIMI},
  bibtex_show = {true},
  pdf         = {splc24_fmcount_CR.pdf}
}

@inproceedings{Bombarda2024i,
  title = {Integrating Product Sampling and Behavioral Testing for Software Product Lines with Combinatorial Testing},
  volume = {27},
  html = {http://dx.doi.org/10.1109/ICSTW60967.2024.00046},
  url = {http://dx.doi.org/10.1109/ICSTW60967.2024.00046},
  DOI = {10.1109/icstw60967.2024.00046},
  booktitle = {2024 IEEE International Conference on Software Testing,  Verification and Validation Workshops (ICSTW)},
  publisher = {IEEE},
  author = {Bombarda,  Andrea and Gargantini,  Angelo},
  year = {2024},
  month = may,
  pages = {197–206},
  funding={ANTHEM},
  bibtex_show = {true}
}

@inproceedings{Bombarda2024h,
  title = {Testing the Evolution of Feature Models with Specific Combinatorial Tests},
  html = {http://dx.doi.org/10.1109/ICSTW60967.2024.00025},
  url = {http://dx.doi.org/10.1109/ICSTW60967.2024.00025},
  DOI = {10.1109/icstw60967.2024.00025},
  booktitle = {2024 IEEE International Conference on Software Testing,  Verification and Validation Workshops (ICSTW)},
  publisher = {IEEE},
  author = {Bombarda,  Andrea and Bonfanti,  Silvia and Gargantini,  Angelo},
  year = {2024},
  month = may,
  pages = {1–10},
  funding={ANTHEM},
  bibtex_show = {true}
}

@inproceedings{Bombarda2024g,
  title = {From Concept to Code: Unveiling a Tool for Translating Abstract State Machines into Java Code},
  ISBN = {9783031637902},
  ISSN = {1611-3349},
  html = {http://dx.doi.org/10.1007/978-3-031-63790-2_10},
  url = {http://dx.doi.org/10.1007/978-3-031-63790-2_10},
  DOI = {10.1007/978-3-031-63790-2_10},
  booktitle = {Rigorous State-Based Methods},
  publisher = {Springer Nature Switzerland},
  author = {Bombarda,  Andrea and Bonfanti,  Silvia and Gargantini,  Angelo},
  year = {2024},
  pages = {160–178},
  funding={ANTHEM},
  bibtex_show = {true}
}

@Article{Bombarda2025g,
  author      = {Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo and Riccobene, Elvinia},
  journal     = {IEEE Access},
  title       = {SIMSPIRE: A Simulator of the Respiratory System},
  year        = {2025},
  issn        = {2169-3536},
  pages       = {113428--113437},
  volume      = {13},
  bibtex_show = {true},
  doi         = {10.1109/ACCESS.2025.3584269},
  url = {http://dx.doi.org/10.1109/ACCESS.2025.3584269},
  html = {http://dx.doi.org/10.1109/ACCESS.2025.3584269},
  funding     = {SAFEST,ANTHEM},
  pdf         = {INSPIRE_digital_twin_ventilator_ACCESS.pdf},
  publisher   = {Institute of Electrical and Electronics Engineers (IEEE)},
}

@Article{Bombarda2025b,
  title = {Integrating formal specifications in the development and testing of {UIs} by formal model–view–controller pattern},
  issn = {1433-2787},
  url = {https://doi.org/10.1007/s10009-025-00812-2},
  html = {https://doi.org/10.1007/s10009-025-00812-2},
  doi = {10.1007/s10009-025-00812-2},
  abstract = {Ensuring software functionality, maintainability, and modularity is vital while developing UIs. For this reason, architectural patterns, like the Model–View–Controller (MVC), are usually employed. The MVC aims to separate the representation of information (model) from its presentation to the user (view). One can use a formal model to study the system and the UI, but such formal models are separately developed and analyzed, and the results of the analysis cannot be assured for the actual implementation. To address this problem, we introduced the formal MVC pattern (fMVC), allowing the integration of Asmeta specifications into the model of the MVC-designed software. This paper extends the fMVC pattern and the framework to better support Java Swing components and enhance error management, including automatic model state rollback on input failure. Moreover, we propose an extension enabling testers to generate and reuse Avalla scenarios for UI validation. We demonstrate the framework’s application, covering modeling, validation, and verification at the model level for the AMAN case study that inspired us during the definition of the fMVC pattern. Moreover, we show how the AMAN UI can be implemented and tested by our approach.},
  journal = {International Journal on Software Tools for Technology Transfer},
  author = {Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo},
  month = may,
  year = {2025},
  funding = {ANTHEM},
  pdf = {jstt_25_fmvc.pdf},
  bibtex_show = {true}
}

@InProceedings{Bombarda2025c,
  author={Andrea Bombarda and Matteo Bellini and Maria Iascone and Domenico Fabio Savo},
  title={A Flexible and Open-Source Tool for Genetic Variant Annotation},
  booktitle={Proceedings of the 18th International Joint Conference on Biomedical Engineering Systems and Technologies - HEALTHINF},
  year={2025}, 
  pages={406-413},
  publisher={SciTePress},
  organization={INSTICC},
  doi={10.5220/0013111600003911},
  url={https://doi.org/10.5220/0013111600003911},
  html={https://doi.org/10.5220/0013111600003911},
  isbn={978-989-758-731-3},
  issn={2184-4305},
  funding = {ANTHEM},
  bibtex_show = {true}
}

@InProceedings{Bombarda2025d,
  author = {Bombarda, Andrea and Ruscica, Giuseppe and Scandurra, Patrizia},
  title = {A self-managing IoT-Edge-Cloud architecture for improved robustness in environmental monitoring},
  year = {2025},
  isbn = {9798400706295},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  html = {https://doi.org/10.1145/3672608.3707801},
  url = {https://doi.org/10.1145/3672608.3707801},
  doi = {10.1145/3672608.3707801},
  abstract = {The new distributed paradigm Edge-Cloud Continuum (ECC) is fundamental to provide a continuum of computing from Edge to Cloud and create more dependable Cloud-powered IoT applications. In line with this computing paradigm, this paper presents a self-managing IoT-Edge-Cloud computing architecture for enhancing robustness in environmental monitoring. In addition to the sensor data transmission to a cloud server node for late processing, a semi-decentralized self-adaptation architecture with feedback control components running on edge nodes (gateways) is adopted to monitor the end devices and make decisions in the edge. The proposed control architecture was implemented as part of SEIROB, an IoT-Edge-Cloud exemplar for air quality monitoring, using the Python programming language and the open-source ChirpStack LoRaWAN network server stack. In this paper, we share the architecture design of SEIROB, report our experiments about its effectiveness in achieving some robustness scenarios, and discuss faced challenges and lessons learned in using a ready-to-use IoT infrastructure (like the ChirpStack platform) for ECC.},
  booktitle = {Proceedings of the 40th ACM/SIGAPP Symposium on Applied Computing},
  pages = {1738–1745},
  numpages = {8},
  keywords = {IoT-based environmental monitoring, software architecture for IoT-edge-cloud computing continuum, self-adaptive IoT},
  location = {Catania International Airport, Catania, Italy},
  series = {SAC '25},
  funding = {ANTHEM,SMIMI},
  bibtex_show = {true},
  pdf         = {SAC25.pdf},
}

@InProceedings {Bombarda2025f,
  author = {Bombarda, Andrea and Garn, Bernhard},
  booktitle = { 2025 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW) },
  title = {{ Welcome to the IWCT 2025 Workshop }},
  year = {2025},
  volume = {},
  ISSN = {2159-4848},
  pages = {xxi-xxii},
  abstract = { },
  keywords = {},
  doi = {10.1109/ICSTW64639.2025.10962459},
  url = {https://doi.ieeecomputersociety.org/10.1109/ICSTW64639.2025.10962459},
  html = {https://doi.ieeecomputersociety.org/10.1109/ICSTW64639.2025.10962459},
  publisher = {IEEE Computer Society},
  address = {Los Alamitos, CA, USA},
  month =apr,
  funding = {ANTHEM},
  bibtex_show = {true}
}

@InProceedings{Saletta2025,
  author="Saletta, Martina and Bombarda, Andrea and Bellini, Matteo and Goisis, Lucrezia and Cazzaniga, Paolo and Iascone, Maria and Savo, Domenico Fabio",
  editor="Bellazzi, Riccardo and Juarez Herrero, Jos{\'e} Manuel and Sacchi, Lucia and Zupan, Bla{\v{z}}",
  title="Automated Phenotype-Based Clustering of Clinical Reports Using Large Language Models",
  booktitle="Artificial Intelligence in Medicine",
  year="2025",
  publisher="Springer Nature Switzerland",
  address="Cham",
  pages="345--350",
  abstract="Large Language Models (LLMs) have shown significant potential in natural language processing tasks, including various applications in clinical and biomedical domains. This study explores the use of LLMs for analyzing a real dataset from Italian clinical reports and proposes a pipeline for automatically clustering these reports based on the described symptoms. The pipeline incorporates two approaches: (1) direct analysis of textual descriptions in the clinical reports, and (2) standardized processing through the automatic extraction of Human Phenotype Ontology terms using LLM-based methods. The obtained clusters will serve as the foundation for further predictive analyses, such as estimating the likelihood of a patient carrying specific genetic mutations. Our investigation compares the performance of direct text analysis against phenotype-standardized descriptions, highlighting the strengths and limitations of each approach.",
  isbn="978-3-031-95841-0",
  doi="10.1007/978-3-031-95841-0_64",
  funding = {ANTHEM},
  html = {https://doi.org/10.1007/978-3-031-95841-0_64},
  url = {https://doi.org/10.1007/978-3-031-95841-0_64},
  bibtex_show = {true}
}

@InProceedings{Zanenga2025,
  author = {Zanenga, Aurora Francesca and Bisceglia, Nunzio Marco and Ippoliti, Benedetta and Bombarda, Andrea and Gargantini, Angelo and Rajhans, Akshay and Menghi, Claudio},
  title = {Theano: A Tool for Verifying the Consistency and Completeness in Tabular Requirements},
  year = {2025},
  isbn = {9798400712760},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3696630.3728599},
  doi = {10.1145/3696630.3728599},
  abstract = {Tabular requirements prescribe software behavior through an "if-then" paradigm. Verifying the consistency and completeness of tabular requirements is crucial, as it can identify specification errors, reduce development time and costs, and help prevent potential failures. Theano is a verification tool designed to ensure the consistency and completeness of tabular requirements formulated with Simulink Requirements Tables. This demonstration paper presents the key features of Theano, illustrates its application through an automotive case study, and discusses the underlying implementation and design choices. An online video walkthrough of the case study is also available: youtu.be/p71bKupmRUQ},
  booktitle = {Proceedings of the 33rd ACM International Conference on the Foundations of Software Engineering},
  pages = {1148–1152},
  numpages = {5},
  keywords = {simulink, requirements table, tabular expressions, consistency, completeness},
  location = {Clarion Hotel Trondheim, Trondheim, Norway},
  series = {FSE Companion '25},
  pdf = {TheanoFSE25.pdf},
  funding = {SMIMI,ANTHEM,MOST}
}

@InProceedings{Damiano2025,
  author="Damiano, Rossella and Scalco, Elisa and L. Della Vedova, Marco and Arrigoni, Alberto and Caroli, Anna and Bombarda, Andrea and Lanzarone, Ettore",
  editor="Bellazzi, Riccardo and Juarez Herrero, Jos{\'e} Manuel and Sacchi, Lucia and Zupan, Bla{\v{z}}",
  title="Integrating Uncertainty Into U-Net Robustness Evaluation Under Natural MRI Alterations: Application to Kidney Segmentation",
  booktitle="Artificial Intelligence in Medicine",
  year="2025",
  publisher="Springer Nature Switzerland",
  address="Cham",
  pages="121--126",
  abstract="The adoption of deep learning (DL) for medical image segmentation in clinical practice is limited by interpretability issues and sensitivity to out-of-distribution data. Robust models that maintain stable accuracy while offering reliable uncertainty estimates in the presence of data variations should be required. We propose a framework to evaluate the robustness of U-Net-based segmentation on a kidney MRI dataset, simulating common abdominal MRI distortions. Robustness is assessed using a novel metric that evaluates both the network's accuracy stability and uncertainty reliability. The results show that, while segmentation accuracy remains stable across alterations, uncertainty is more sensitive to these changes. This suggests that capturing also uncertainty offers a more comprehensive assessment of DL models than traditional accuracy-focused frameworks.",
  isbn="978-3-031-95841-0",
  doi="10.1007/978-3-031-95841-0_23",
  funding={ANTHEM},
  html = {https://doi.org/10.1007/978-3-031-95841-0_23},
  url = {https://doi.org/10.1007/978-3-031-95841-0_23},
  bibtex_show = {true}
}

@InProceedings{Bombarda2025e,
  author      = {Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo and Pellegrinelli, Nico},
  booktitle   = {NASA Formal Methods},
  title       = {Eliminating Flakiness: Deterministic Control for Validating Nondeterministic Asmeta Specifications},
  year        = {2025},
  editor      = {Dutle, Aaron and Humphrey, Laura and Titolo, Laura},
  pages       = {100--115},
  publisher   = {Springer Nature Switzerland},
  abstract    = {Formal methods are increasingly used in the development of safety-critical systems, offering a rigorous approach from model to implementation. However, in the validation process, the nondeterminism is a hindrance in their application, as it can lead to flaky tests or flaky scenarios. Scenarios written for models that implement nondeterminism produce unpredictable outcomes by complicating model validation and reducing developer confidence. In this paper, we present an approach to address the nondeterminism in the validation phase when using the Asmeta framework. We extend the Avalla language, used for scenario specification in Asmeta, to allow deterministic control over nondeterministic choices. This extension ensures that scenarios written for nondeterministic models execute predictably by eliminating flakiness. We demonstrate our approach using a running example of an automatic coffee vending machine.},
  bibtex_show = {true},
  doi         = {10.1007/978-3-031-93706-4_7},
  url         = {https://doi.org/10.1007/978-3-031-93706-4_7},
  html        = {https://doi.org/10.1007/978-3-031-93706-4_7},
  funding     = {ANTHEM,SMIMI},
  isbn        = {9783031937064},
  issn        = {1611-3349},
  pdf         = {flaky_scenario_based_validation_NFM2025_new.pdf},
}

@InProceedings{Arcaini2025,
  author    = {Arcaini, Paolo and Bombarda, Andrea and Gargantini, Angelo},
  booktitle = {2025 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
  title     = {A Search-Based Benchmark Generator for Constrained Combinatorial Testing Models},
  bibtex_show = {true}, 
  year      = {2025},
  month     = mar,
  pages     = {278--287},
  publisher = {IEEE},
  doi       = {10.1109/icstw64639.2025.10962457},
  html      = {https://doi.org/10.1109/icstw64639.2025.10962457},
  url       = {https://doi.org/10.1109/icstw64639.2025.10962457},
  pdf 	    = {Search-Based_Benchmark_Generator_IWCT25.pdf}
}

@Article{Bombarda2025,
  title = {On the {Completion} of {Partial} {Combinatorial} {Test} {Suites}},
  volume = {6},
  issn = {2661-8907},
  url = {https://doi.org/10.1007/s42979-025-03937-y},
  doi = {10.1007/s42979-025-03937-y},
  abstract = {Combinatorial Interaction Testing is a widely used method for testing intricate systems. In most cases, the test suites are generated from scratch. However, there are cases when testers may want to reuse existing tests, in order to include them in a new test suite, both for enhancing the performance of the generation process or because those tests are valuable for checking the functioning of the system under test in critical conditions. In this paper, we propose a general framework for dealing with existing test suites using combinatorial test generators. We also discuss the definition of partial tests and test suites, and the scenarios in which partial tests should or could be reused. Finally, we compare the most common tools for completing test suites, namely ACTS, PICT, and pMEDICI+, using different incompleteness levels in the seeds. ACTS with seeds generally performed the best in terms of test suite size and generation time. The other two tools, namely PICT and pMEDICI+, were slower and produced larger test suites on average. We have found that using seeds could sometimes come with a cost, especially in the scenario where test cases are partial and completing them is not always cost-effective in terms of generation time. The choice of re-using or throwing away existing tests must be based on use case-specific requirements. We do not recommend using seeds when they are composed of partial test cases, providing that they are not required for some other reason. On the contrary, we envision the use of partial test suites when a test suite with higher strength is needed.},
  number = {4},
  journal = {SN Computer Science},
  author = {Bombarda, Andrea and Gargantini, Angelo},
  month = apr,
  year = {2025},
  pages = {383},
  funding={ANTHEM},
  pdf = {sn_completionCIT25.pdf},
  bibtex_show = {true}
}









@Comment{Andrea: Sistemato fino a qua. Gli altri articoli ancora non hanno DOI}
@InProceedings{abz25,
  author    = {.Andrea Bombarda, Silvia Bonfanti, Angelo Gargantini, Nico Pellegrinelli and Patrizia Scandurra},
  booktitle = {ABZ 2025 – 11th International Conference on Rigorous State Based Methods},
  title     = {Safety enforcement for autonomous driving on a simulated highway using Asmeta models@run.time},
    bibtex_show = {true}, year      = {2025},
  abstract  = {Mission-critical systems, such as autonomous vehicles, operate in dynamic environments where unexpected events should be managed while guaranteeing safe behavior. Ensuring the safety of these complex systems is a major open challenge and requires robust mechanisms to enforce correct behavior during runtime. This paper illustrates a run-time safety enforcement framework for the output sanitization of an autonomous driving agent on a highway. The enforcement mechanism is based on a (formally validated and verified) Asmeta model representing the enforcement rules and used at run-time to eventually steer the driving agent to behave safely and avoid collisions. We demonstrate both efficacy and efficiency of the proposed enforcement approach by conducting an experimental evaluation. We connected our safety enforcer with the highway simulation environment and co-executed it with the pre-trained (unsafe) AI agents as provided by the ABZ 2025 case study. We consider the single-lane case with the safety requirement and one scenario of the multi-lane case about preferring the right-most lane},
  funding   = {SMIMI,SAFEST},
}

@Comment{jabref-meta: databaseType:bibtex;}
